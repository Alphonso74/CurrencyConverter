{"ast":null,"code":"var _jsxFileName = \"/Users/alphonsomckenzie/WebstormProjects/untitled11/src/index.js\";\nimport React, { useState } from 'react'; //useState is a hook\n\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [rates, setRates] = useState(null); //rates is a state variable, setRates used to update rates with returned data\n\n  const apiURL = 'https://api.exchangeratesapi.io/latest'; //axios approach to fetch data using setRates method and assign it to rates\n\n  const fetchData = async () => {\n    const response = await axios.get(apiURL);\n    const answer = document.getElementById(\"output\");\n    const currency1 = document.getElementById(\"currencysoptions\").value;\n    const currency2 = document.getElementById(\"currencysoptions2\").value;\n    const currencyvalue = document.getElementById(\"conversionvalue\").value;\n    setRates(response.data);\n    const ratedata = rates.base;\n    const form = document.getElementById(\"mainform\");\n    form.addEventListener(\"submit\", function (e) {\n      answer.innerText = {\n        ratedata\n      };\n      e.preventDefault();\n    });\n  }; //fetch approach to outputting data from api\n\n\n  async function fetchRates() {\n    //await keyword permitted in async functions\n    const answer = document.getElementById(\"output\");\n    const currency1 = document.getElementById(\"currencysoptions\").value;\n    const currency2 = document.getElementById(\"currencysoptions2\").value;\n    const currencyvalue = document.getElementById(\"conversionvalue\").value;\n    const form = document.getElementById(\"mainform\"); ////////***********************\n    // try {\n    //     let res = await fetch(apiURL);\n    //     return await res.json();\n    // } catch (error) {\n    //\n    //     console.log(error, \"jhhihihhhi\");\n    //\n    // }\n    ////////***********************\n    //Prevent incomplete form submission\n\n    if (currency1 === \"Select Currency\" || currency2 === \"Select Currency\" || currencyvalue === \"\") {\n      form.addEventListener(\"submit\", function (e) {\n        alert(\"Please fully complete form to submit\");\n        form.reload();\n        e.preventDefault();\n      });\n    } else {\n      //Convert back to EUR by currencyvalue/currency1Rate\n      if (currency2 === \"EUR\") {\n        console.log(\"Test3\");\n        fetch(apiURL).then(resp => resp.text()).then(data => {\n          const dt = data;\n          const substring = dt.substring(16, 22);\n          const numberVersion = parseInt(substring, 10);\n          console.log(parseFloat((numberVersion * currencyvalue).toString()));\n          const final = parseFloat((numberVersion * currencyvalue).toString()); // console.log(numberVersion + 1);\n\n          answer.innerText = \"Answer: \" + final.toString(); //setRates(data);\n          //console.log(data.toString());\n        });\n      } //If currency1 is EUR convert it straight to currency2\n      // currencyvalue * currency2Rate\n\n\n      if (currency1 === 'EUR') {\n        if (currency2 === 'CAD') {\n          fetch(apiURL).then(resp => resp.text()).then(data => {\n            const dt = data;\n            const substring = dt.substring(16, 22);\n            const numberVersion = parseFloat(substring);\n            const final = numberVersion + 1;\n            console.log(numberVersion + 1);\n            answer.innerText = \"Answer: \" + final.toString(); //setRates(data);\n            //console.log(data.toString());\n          });\n          console.log(\"Test\");\n        }\n      } //Take value of currency1 if its not EUR, convert to EUR then covert to currency2\n      // currencyvalue/currency1Rate then convertedValue * currency2Rate\n      else {//console.log(\"Test2\")\n        } // console.log(currency1);\n      // console.log(currency2);\n      // console.log(currencyvalue);\n\n\n      form.addEventListener(\"submit\", function (e) {\n        e.preventDefault();\n      });\n    }\n  } //Calls async fetchRates gets json and outputs rates to answer textview\n\n\n  async function renderRates() {\n    let rates = await fetchRates();\n    const answer = document.getElementById(\"output\");\n    let html = '';\n    rates.map(rate => {\n      let htmlSegment = rate.rates;\n      html += htmlSegment;\n    }); // let container = document.querySelector('.container');\n    // container.innerHTML = html;\n\n    const form = document.getElementById(\"mainform\");\n    form.addEventListener(\"submit\", function (e) {\n      answer.innerText = html;\n      e.preventDefault();\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \"Alphonso's Currency Converter\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"mainform\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, \"Enter Currency Data\"), /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"currencysoptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, \"Select Currency\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, \"EUR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, \"CAD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, \"HKD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, \"ISK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }, \"PHP\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, \"DKK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, \"HUF\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }, \"CZK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, \"AUD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 25\n    }\n  }, \"RON\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  }, \"SEK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, \"IDR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 25\n    }\n  }, \"BRL\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 25\n    }\n  }, \"RUB\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, \"HRK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }, \"JPY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, \"THB\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, \"CHF\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  }, \"SGD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, \"PLN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  }, \"BGN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, \"TRY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 25\n    }\n  }, \"CNY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, \"NOK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, \"NZD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  }, \"ZAR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, \"USD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, \"MXN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, \"ILS\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 25\n    }\n  }, \"GBP\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, \"KRW\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, \"MYR\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"conversionvalue\",\n    className: \"conversionvalue\",\n    placeholder: \"Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, \"Select Currency To Convert To\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"currencysoptions2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, \"Select Currency\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, \"EUR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }, \"CAD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, \"HKD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, \"ISK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }, \"PHP\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, \"DKK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }, \"HUF\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, \"CZK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }, \"AUD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, \"RON\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 25\n    }\n  }, \"SEK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 25\n    }\n  }, \"IDR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, \"BRL\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  }, \"RUB\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  }, \"HRK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }, \"JPY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, \"THB\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 25\n    }\n  }, \"CHF\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 25\n    }\n  }, \"SGD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, \"PLN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }, \"BGN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, \"TRY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, \"CNY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, \"NOK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, \"NZD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }, \"ZAR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 25\n    }\n  }, \"USD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, \"MXN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, \"ILS\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, \"GBP\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, \"KRW\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }, \"MYR\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fetch-button\",\n    onClick: fetchRates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, \"CONVERT!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answerOutput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  })));\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/alphonsomckenzie/WebstormProjects/untitled11/src/index.js"],"names":["React","useState","ReactDOM","axios","App","rates","setRates","apiURL","fetchData","response","get","answer","document","getElementById","currency1","value","currency2","currencyvalue","data","ratedata","base","form","addEventListener","e","innerText","preventDefault","fetchRates","alert","reload","console","log","fetch","then","resp","text","dt","substring","numberVersion","parseInt","parseFloat","toString","final","renderRates","html","map","rate","htmlSegment","rootElement","render"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'; //useState is a hook\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport axios from 'axios';\n\nfunction App() {\n\n    const [rates,setRates] = useState(null); //rates is a state variable, setRates used to update rates with returned data\n    const apiURL = 'https://api.exchangeratesapi.io/latest';\n\n\n    //axios approach to fetch data using setRates method and assign it to rates\n    const fetchData = async () => {\n\n\n        const response = await axios.get(apiURL);\n        const answer =  document.getElementById(\"output\");\n\n\n        const currency1 = document.getElementById(\"currencysoptions\").value;\n        const currency2 = document.getElementById(\"currencysoptions2\").value;\n        const currencyvalue = document.getElementById(\"conversionvalue\").value;\n\n\n        setRates(response.data);\n\n\n        const ratedata = rates.base;\n        const form = document.getElementById(\"mainform\");\n\n        form.addEventListener(\"submit\",function (e) {\n            answer.innerText = {ratedata};\n            e.preventDefault();\n        });\n    };\n\n\n    //fetch approach to outputting data from api\n    async function fetchRates() { //await keyword permitted in async functions\n\n        const answer = document.getElementById(\"output\");\n        const currency1 = document.getElementById(\"currencysoptions\").value;\n        const currency2 = document.getElementById(\"currencysoptions2\").value;\n        const currencyvalue = document.getElementById(\"conversionvalue\").value;\n        const form = document.getElementById(\"mainform\");\n\n        ////////***********************\n\n        // try {\n        //     let res = await fetch(apiURL);\n        //     return await res.json();\n        // } catch (error) {\n        //\n        //     console.log(error, \"jhhihihhhi\");\n        //\n        // }\n\n        ////////***********************\n\n        //Prevent incomplete form submission\n        if (currency1 === \"Select Currency\" || currency2 === \"Select Currency\" || currencyvalue === \"\") {\n\n            form.addEventListener(\"submit\", function (e) {\n                alert(\"Please fully complete form to submit\");\n                form.reload();\n                e.preventDefault();\n            });\n\n        } else {\n\n            //Convert back to EUR by currencyvalue/currency1Rate\n            if (currency2 === \"EUR\") {\n\n                console.log(\"Test3\")\n\n                fetch(apiURL)\n                    .then(resp => resp.text())\n                    .then(data => {\n\n\n                        const dt = data;\n                        const substring = dt.substring(16,22);\n                        const numberVersion = parseInt(substring,10);\n                        console.log(parseFloat((numberVersion * currencyvalue).toString()));\n                        const final = parseFloat((numberVersion * currencyvalue).toString()) ;\n\n                        // console.log(numberVersion + 1);\n                        answer.innerText = \"Answer: \" + final.toString() ;\n\n                        //setRates(data);\n                        //console.log(data.toString());\n\n                    });\n\n            }\n\n\n            //If currency1 is EUR convert it straight to currency2\n            // currencyvalue * currency2Rate\n\n            if (currency1 === 'EUR') {\n\n                if(currency2 === 'CAD') {\n\n                    fetch(apiURL)\n                        .then(resp => resp.text())\n                        .then(data => {\n\n\n                            const dt = data;\n                            const substring = dt.substring(16, 22);\n                            const numberVersion = parseFloat(substring);\n                            const final = numberVersion + 1;\n                            console.log(numberVersion + 1);\n                            answer.innerText = \"Answer: \" + final.toString();\n\n                            //setRates(data);\n                            //console.log(data.toString());\n\n                        });\n                    console.log(\"Test\");\n                }\n\n            }\n\n            //Take value of currency1 if its not EUR, convert to EUR then covert to currency2\n            // currencyvalue/currency1Rate then convertedValue * currency2Rate\n            else {\n\n                //console.log(\"Test2\")\n            }\n\n            // console.log(currency1);\n            // console.log(currency2);\n            // console.log(currencyvalue);\n\n\n\n\n            form.addEventListener(\"submit\", function (e) {\n                e.preventDefault();\n            });\n\n\n        }\n    }\n\n    //Calls async fetchRates gets json and outputs rates to answer textview\n    async function renderRates() {\n        let rates = await fetchRates();\n\n        const answer = document.getElementById(\"output\");\n\n        let html = '';\n        rates.map(rate => {\n            let htmlSegment = rate.rates;\n\n\n            html += htmlSegment;\n        });\n\n        // let container = document.querySelector('.container');\n        // container.innerHTML = html;\n        const form = document.getElementById(\"mainform\");\n\n        form.addEventListener(\"submit\", function (e) {\n            answer.innerText = html;\n            e.preventDefault();\n        });\n    }\n\n\n\n    return (\n        <div className=\"App\">\n\n            <h1>Alphonso's Currency Converter</h1>\n\n            <div>\n                <form id=\"mainform\">\n                    <p>Enter Currency Data</p>\n                    <body>\n                    <select id=\"currencysoptions\">\n                        <option>Select Currency</option>\n                        <option>EUR</option>\n                        <option>CAD</option>\n                        <option>HKD</option>\n                        <option>ISK</option>\n                        <option>PHP</option>\n                        <option>DKK</option>\n                        <option>HUF</option>\n                        <option>CZK</option>\n                        <option>AUD</option>\n                        <option>RON</option>\n                        <option>SEK</option>\n                        <option>IDR</option>\n                        <option>BRL</option>\n                        <option>RUB</option>\n                        <option>HRK</option>\n                        <option>JPY</option>\n                        <option>THB</option>\n                        <option>CHF</option>\n                        <option>SGD</option>\n                        <option>PLN</option>\n                        <option>BGN</option>\n                        <option>TRY</option>\n                        <option>CNY</option>\n                        <option>NOK</option>\n                        <option>NZD</option>\n                        <option>ZAR</option>\n                        <option>USD</option>\n                        <option>MXN</option>\n                        <option>ILS</option>\n                        <option>GBP</option>\n                        <option>KRW</option>\n                        <option>MYR</option>\n                    </select>\n                    <input type=\"number\" id=\"conversionvalue\" className=\"conversionvalue\" placeholder=\"Amount\"/>\n                    </body>\n\n                    <body>\n\n                    <p>Select Currency To Convert To</p>\n\n                    <select id=\"currencysoptions2\">\n                        <option>Select Currency</option>\n                        <option>EUR</option>\n                        <option>CAD</option>\n                        <option>HKD</option>\n                        <option>ISK</option>\n                        <option>PHP</option>\n                        <option>DKK</option>\n                        <option>HUF</option>\n                        <option>CZK</option>\n                        <option>AUD</option>\n                        <option>RON</option>\n                        <option>SEK</option>\n                        <option>IDR</option>\n                        <option>BRL</option>\n                        <option>RUB</option>\n                        <option>HRK</option>\n                        <option>JPY</option>\n                        <option>THB</option>\n                        <option>CHF</option>\n                        <option>SGD</option>\n                        <option>PLN</option>\n                        <option>BGN</option>\n                        <option>TRY</option>\n                        <option>CNY</option>\n                        <option>NOK</option>\n                        <option>NZD</option>\n                        <option>ZAR</option>\n                        <option>USD</option>\n                        <option>MXN</option>\n                        <option>ILS</option>\n                        <option>GBP</option>\n                        <option>KRW</option>\n                        <option>MYR</option>\n                    </select>\n                    </body>\n\n                <button className=\"fetch-button\" onClick={fetchRates}>CONVERT!</button>\n                <br />\n                </form>\n            </div>\n\n            {/* Display data from API */}\n\n            {/* Use JSX below for each book */}\n            <div className=\"answerOutput\">\n\n                <h1 id=\"output\"></h1>\n\n                {/*Iterate through API data and display to page*/}\n\n                {/*{rates && rates.map((rate,index) => (*/}\n                {/*<div className=\"rate\" key={index}>*/}\n                {/*    <h3>{rate.base}</h3>*/}\n                {/*    <div className=\"details\">*/}\n                {/*        <p>{rate.date}</p>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n                {/*))}*/}\n\n            </div>\n\n        </div>\n    );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}