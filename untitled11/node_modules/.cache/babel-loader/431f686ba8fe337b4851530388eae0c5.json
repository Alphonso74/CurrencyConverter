{"ast":null,"code":"var _jsxFileName = \"/Users/alphonsomckenzie/WebstormProjects/untitled11/src/index.js\";\nimport React, { useState } from 'react'; //useState is a hook\n\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport axios from 'axios';\n\nfunction App() {\n  //const [rates,setRates] = useState(null); //rates is a state variable, setRates used to update rates with returned data\n  const apiURL = 'https://api.exchangeratesapi.io/latest'; //axios approach to fetch data using setRates method and assign it to rates\n  // const fetchData = async () => {\n  //\n  //\n  //     const response = await axios.get(apiURL);\n  //     const answer =  document.getElementById(\"output\");\n  //\n  //\n  //     const currency1 = document.getElementById(\"currencysoptions\").value;\n  //     const currency2 = document.getElementById(\"currencysoptions2\").value;\n  //     const currencyvalue = document.getElementById(\"conversionvalue\").value;\n  //\n  //\n  //     setRates(response.data);\n  //\n  //\n  //     const ratedata = rates.base;\n  //     const form = document.getElementById(\"mainform\");\n  //\n  //     form.addEventListener(\"submit\",function (e) {\n  //         answer.innerText = {ratedata};\n  //         e.preventDefault();\n  //     });\n  // };\n  //fetch approach to outputting data from api\n\n  async function fetchRates() {\n    //await keyword permitted in async functions\n    const answer = document.getElementById(\"output\");\n    const currency1 = document.getElementById(\"currencysoptions\").value;\n    const currency2 = document.getElementById(\"currencysoptions2\").value;\n    const currencyvalue = document.getElementById(\"conversionvalue\").value;\n    const form = document.getElementById(\"mainform\"); ////////***********************\n    // try {\n    //     let res = await fetch(apiURL);\n    //     return await res.json();\n    // } catch (error) {\n    //\n    //     console.log(error, \"jhhihihhhi\");\n    //\n    // }\n    ////////***********************\n    //Prevent incomplete form submission\n\n    if (currency1 === \"Select Currency\" || currency2 === \"Select Currency\" || currencyvalue === \"\") {\n      form.addEventListener(\"submit\", function (e) {\n        alert(\"Please fully complete form to submit\");\n        form.reload();\n        e.preventDefault();\n      });\n    } else {\n      //Convert back to EUR by currencyvalue/currency1Rate\n      if (currency2 === \"EUR\") {\n        //console.log(\"Test3\");\n        if (currency1 === 'HKD') {\n          fetch(apiURL).then(resp => resp.text()).then(data => {\n            console.log(data.toString());\n            const dt = data;\n            const substring = dt.substring(29, 35); // const substring = \"6\";\n\n            console.log(substring);\n            const numberVersion = parseFloat(substring);\n            console.log(parseFloat((currencyvalue / numberVersion).toString()));\n            const final = parseFloat((currencyvalue / numberVersion).toString()); // console.log(numberVersion + 1);\n\n            answer.innerText = \"Answer: \" + final.toString(); //setRates(data);\n            //console.log(data.toString());\n          });\n        }\n      } //If currency1 is EUR convert it straight to currency2\n      // currencyvalue * currency2Rate\n      else if (currency1 === 'EUR') {\n          if (currency2 === 'HKD') {\n            fetch(apiURL).then(resp => resp.text()).then(data => {\n              console.log(data.toString());\n              const dt = data;\n              const substring = dt.substring(29, 35); // const substring = \"6\";\n\n              console.log(substring);\n              const numberVersion = parseFloat(substring);\n              console.log(parseFloat((currencyvalue * numberVersion).toString()));\n              const final = parseFloat((currencyvalue * numberVersion).toString()); // console.log(numberVersion + 1);\n\n              answer.innerText = \"Answer: \" + final.toString(); //setRates(data);\n              //console.log(data.toString());\n            });\n          }\n        } //Take value of currency1 if its not EUR, convert to EUR then covert to currency2\n        // currencyvalue/currency1Rate then convertedValue * currency2Rate\n        else {\n            if (currency1 === 'HKD' && currency2 === 'CAD') {\n              fetch(apiURL).then(resp => resp.text()).then(data => {\n                console.log(data.toString());\n                const dt = data;\n                const substringHKD = dt.substring(29, 35);\n                const substringCAD = dt.substring(16, 22); // console.log(substringHKD + \" HKD\");\n                // console.log(substringCAD + \" CAD\");\n\n                const numberVersionHKD = parseFloat(substringHKD);\n                const numberVersionCAD = parseFloat(substringCAD); // const numberVersion = parseInt(substring, 10);\n                // console.log(parseFloat((currencyvalue * numberVersion).toString()));\n\n                const final = parseFloat((currencyvalue / numberVersionHKD).toString());\n                const final2 = parseFloat((final * numberVersionCAD).toString());\n                answer.innerText = \"Answer: \" + final2.toString();\n              });\n            } else if (currency1 === 'CAD' && currency2 === 'HKD') {\n              fetch(apiURL).then(resp => resp.text()).then(data => {\n                console.log(data.toString());\n                const dt = data;\n                const substringHKD = dt.substring(29, 35);\n                const substringCAD = dt.substring(16, 22); // console.log(substringHKD + \" HKD\");\n                // console.log(substringCAD + \" CAD\");\n\n                const numberVersionHKD = parseFloat(substringHKD);\n                const numberVersionCAD = parseFloat(substringCAD); // const numberVersion = parseInt(substring, 10);\n                // console.log(parseFloat((currencyvalue * numberVersion).toString()));\n\n                const final = parseFloat((currencyvalue / numberVersionCAD).toString());\n                const final2 = parseFloat((final * numberVersionHKD).toString());\n                answer.innerText = \"Answer: \" + final2.toString();\n              });\n            }\n          } // console.log(currency1);\n      // console.log(currency2);\n      // console.log(currencyvalue);\n\n\n      form.addEventListener(\"submit\", function (e) {\n        e.preventDefault();\n      });\n    }\n  } //Calls async fetchRates gets json and outputs rates to answer textview\n  // async function renderRates() {\n  //     let rates = await fetchRates();\n  //\n  //     const answer = document.getElementById(\"output\");\n  //\n  //     let html = '';\n  //     rates.map(rate => {\n  //         let htmlSegment = rate.rates;\n  //\n  //\n  //         html += htmlSegment;\n  //     });\n  //\n  //     // let container = document.querySelector('.container');\n  //     // container.innerHTML = html;\n  //     const form = document.getElementById(\"mainform\");\n  //\n  //     form.addEventListener(\"submit\", function (e) {\n  //         answer.innerText = html;\n  //         e.preventDefault();\n  //     });\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"Alphonso's Currency Converter\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"mainform\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, \"Enter Currency Data\"), /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"currencysoptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, \"Select Currency\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, \"EUR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }, \"CAD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 25\n    }\n  }, \"HKD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }, \"ISK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, \"PHP\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, \"DKK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }, \"HUF\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }, \"CZK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, \"AUD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, \"RON\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }, \"SEK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  }, \"IDR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }\n  }, \"BRL\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  }, \"RUB\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, \"HRK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 25\n    }\n  }, \"JPY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, \"THB\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, \"CHF\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, \"SGD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, \"PLN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 25\n    }\n  }, \"BGN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 25\n    }\n  }, \"TRY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  }, \"CNY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 25\n    }\n  }, \"NOK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 25\n    }\n  }, \"NZD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }\n  }, \"ZAR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, \"USD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }, \"MXN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }\n  }, \"ILS\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 25\n    }\n  }, \"GBP\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 25\n    }\n  }, \"KRW\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  }, \"MYR\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    id: \"conversionvalue\",\n    className: \"conversionvalue\",\n    placeholder: \"Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 21\n    }\n  }, \"Select Currency To Convert To\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"currencysoptions2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 25\n    }\n  }, \"Select Currency\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 25\n    }\n  }, \"EUR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, \"CAD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 25\n    }\n  }, \"HKD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 25\n    }\n  }, \"ISK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, \"PHP\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }, \"DKK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }, \"HUF\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 25\n    }\n  }, \"CZK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 25\n    }\n  }, \"AUD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  }, \"RON\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }, \"SEK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 25\n    }\n  }, \"IDR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }, \"BRL\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 25\n    }\n  }, \"RUB\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 25\n    }\n  }, \"HRK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, \"JPY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 25\n    }\n  }, \"THB\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 25\n    }\n  }, \"CHF\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 25\n    }\n  }, \"SGD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  }, \"PLN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 25\n    }\n  }, \"BGN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 25\n    }\n  }, \"TRY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 25\n    }\n  }, \"CNY\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 25\n    }\n  }, \"NOK\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }\n  }, \"NZD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 25\n    }\n  }, \"ZAR\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 25\n    }\n  }, \"USD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, \"MXN\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 25\n    }\n  }, \"ILS\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 25\n    }\n  }, \"GBP\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 25\n    }\n  }, \"KRW\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 25\n    }\n  }, \"MYR\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"fetch-button\",\n    onClick: fetchRates,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }, \"CONVERT!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answerOutput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  })));\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/alphonsomckenzie/WebstormProjects/untitled11/src/index.js"],"names":["React","useState","ReactDOM","axios","App","apiURL","fetchRates","answer","document","getElementById","currency1","value","currency2","currencyvalue","form","addEventListener","e","alert","reload","preventDefault","fetch","then","resp","text","data","console","log","toString","dt","substring","numberVersion","parseFloat","final","innerText","substringHKD","substringCAD","numberVersionHKD","numberVersionCAD","final2","rootElement","render"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'; //useState is a hook\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport axios from 'axios';\n\nfunction App() {\n\n    //const [rates,setRates] = useState(null); //rates is a state variable, setRates used to update rates with returned data\n    const apiURL = 'https://api.exchangeratesapi.io/latest';\n\n\n    //axios approach to fetch data using setRates method and assign it to rates\n    // const fetchData = async () => {\n    //\n    //\n    //     const response = await axios.get(apiURL);\n    //     const answer =  document.getElementById(\"output\");\n    //\n    //\n    //     const currency1 = document.getElementById(\"currencysoptions\").value;\n    //     const currency2 = document.getElementById(\"currencysoptions2\").value;\n    //     const currencyvalue = document.getElementById(\"conversionvalue\").value;\n    //\n    //\n    //     setRates(response.data);\n    //\n    //\n    //     const ratedata = rates.base;\n    //     const form = document.getElementById(\"mainform\");\n    //\n    //     form.addEventListener(\"submit\",function (e) {\n    //         answer.innerText = {ratedata};\n    //         e.preventDefault();\n    //     });\n    // };\n\n\n    //fetch approach to outputting data from api\n    async function fetchRates() { //await keyword permitted in async functions\n\n        const answer = document.getElementById(\"output\");\n        const currency1 = document.getElementById(\"currencysoptions\").value;\n        const currency2 = document.getElementById(\"currencysoptions2\").value;\n        const currencyvalue = document.getElementById(\"conversionvalue\").value;\n        const form = document.getElementById(\"mainform\");\n\n        ////////***********************\n\n        // try {\n        //     let res = await fetch(apiURL);\n        //     return await res.json();\n        // } catch (error) {\n        //\n        //     console.log(error, \"jhhihihhhi\");\n        //\n        // }\n\n        ////////***********************\n\n        //Prevent incomplete form submission\n        if (currency1 === \"Select Currency\" || currency2 === \"Select Currency\" || currencyvalue === \"\") {\n\n            form.addEventListener(\"submit\", function (e) {\n                alert(\"Please fully complete form to submit\");\n                form.reload();\n                e.preventDefault();\n            });\n\n        } else {\n\n            //Convert back to EUR by currencyvalue/currency1Rate\n            if (currency2 === \"EUR\") {\n\n                //console.log(\"Test3\");\n\n                if (currency1 === 'HKD') {\n\n                    fetch(apiURL)\n                        .then(resp => resp.text())\n                        .then(data => {\n\n\n                            console.log(data.toString());\n                            const dt = data;\n                            const substring = dt.substring(29, 35);\n                            // const substring = \"6\";\n                            console.log(substring);\n                            const numberVersion = parseFloat(substring);\n                            console.log(parseFloat((currencyvalue / numberVersion).toString()));\n                            const final = parseFloat((currencyvalue / numberVersion).toString());\n\n                            // console.log(numberVersion + 1);\n                            answer.innerText = \"Answer: \" + final.toString();\n\n                            //setRates(data);\n                            //console.log(data.toString());\n\n                        });\n\n                }\n            }\n\n\n            //If currency1 is EUR convert it straight to currency2\n            // currencyvalue * currency2Rate\n\n           else if(currency1 === 'EUR') {\n\n                if(currency2 === 'HKD') {\n\n                    fetch(apiURL)\n                        .then(resp => resp.text())\n                        .then(data => {\n\n\n                            console.log(data.toString());\n                            const dt = data;\n                            const substring = dt.substring(29, 35);\n                            // const substring = \"6\";\n                            console.log(substring);\n                            const numberVersion = parseFloat(substring);\n                            console.log(parseFloat((currencyvalue * numberVersion).toString()));\n                            const final = parseFloat((currencyvalue * numberVersion).toString());\n\n                            // console.log(numberVersion + 1);\n                            answer.innerText = \"Answer: \" + final.toString();\n\n                            //setRates(data);\n                            //console.log(data.toString());\n\n                        });\n                }\n\n            }\n\n            //Take value of currency1 if its not EUR, convert to EUR then covert to currency2\n            // currencyvalue/currency1Rate then convertedValue * currency2Rate\n            else {\n\n                if((currency1 === 'HKD' && currency2 === 'CAD')){\n\n\n                    fetch(apiURL)\n                        .then(resp => resp.text())\n                        .then(data => {\n\n\n                            console.log(data.toString());\n                            const dt = data;\n                            const substringHKD = dt.substring(29, 35);\n                            const substringCAD = dt.substring(16,22);\n                            // console.log(substringHKD + \" HKD\");\n                            // console.log(substringCAD + \" CAD\");\n                            const numberVersionHKD = parseFloat(substringHKD);\n                            const numberVersionCAD = parseFloat(substringCAD);\n\n                            // const numberVersion = parseInt(substring, 10);\n\n                            // console.log(parseFloat((currencyvalue * numberVersion).toString()));\n                            const final = parseFloat((currencyvalue / numberVersionHKD).toString());\n                            const final2 = parseFloat((final * numberVersionCAD).toString());\n\n\n                            answer.innerText = \"Answer: \" + final2.toString();\n\n\n\n                        });\n\n\n                }\n                else if((currency1 === 'CAD' && currency2 === 'HKD')){\n\n                    fetch(apiURL)\n                        .then(resp => resp.text())\n                        .then(data => {\n\n\n                            console.log(data.toString());\n                            const dt = data;\n                            const substringHKD = dt.substring(29, 35);\n                            const substringCAD = dt.substring(16,22);\n                            // console.log(substringHKD + \" HKD\");\n                            // console.log(substringCAD + \" CAD\");\n                            const numberVersionHKD = parseFloat(substringHKD);\n                            const numberVersionCAD = parseFloat(substringCAD);\n\n                            // const numberVersion = parseInt(substring, 10);\n\n                            // console.log(parseFloat((currencyvalue * numberVersion).toString()));\n                            const final = parseFloat((currencyvalue / numberVersionCAD).toString());\n                            const final2 = parseFloat((final * numberVersionHKD).toString());\n\n\n                            answer.innerText = \"Answer: \" + final2.toString();\n\n\n\n                        });\n\n                }\n\n            }\n\n            // console.log(currency1);\n            // console.log(currency2);\n            // console.log(currencyvalue);\n\n\n\n\n            form.addEventListener(\"submit\", function (e) {\n                e.preventDefault();\n            });\n\n\n        }\n    }\n\n    //Calls async fetchRates gets json and outputs rates to answer textview\n    // async function renderRates() {\n    //     let rates = await fetchRates();\n    //\n    //     const answer = document.getElementById(\"output\");\n    //\n    //     let html = '';\n    //     rates.map(rate => {\n    //         let htmlSegment = rate.rates;\n    //\n    //\n    //         html += htmlSegment;\n    //     });\n    //\n    //     // let container = document.querySelector('.container');\n    //     // container.innerHTML = html;\n    //     const form = document.getElementById(\"mainform\");\n    //\n    //     form.addEventListener(\"submit\", function (e) {\n    //         answer.innerText = html;\n    //         e.preventDefault();\n    //     });\n    // }\n\n\n\n    return (\n        <div className=\"App\">\n\n            <h1>Alphonso's Currency Converter</h1>\n\n            <div>\n                <form id=\"mainform\">\n                    <p>Enter Currency Data</p>\n                    <body>\n                    <select id=\"currencysoptions\">\n                        <option>Select Currency</option>\n                        <option>EUR</option>\n                        <option>CAD</option>\n                        <option>HKD</option>\n                        <option>ISK</option>\n                        <option>PHP</option>\n                        <option>DKK</option>\n                        <option>HUF</option>\n                        <option>CZK</option>\n                        <option>AUD</option>\n                        <option>RON</option>\n                        <option>SEK</option>\n                        <option>IDR</option>\n                        <option>BRL</option>\n                        <option>RUB</option>\n                        <option>HRK</option>\n                        <option>JPY</option>\n                        <option>THB</option>\n                        <option>CHF</option>\n                        <option>SGD</option>\n                        <option>PLN</option>\n                        <option>BGN</option>\n                        <option>TRY</option>\n                        <option>CNY</option>\n                        <option>NOK</option>\n                        <option>NZD</option>\n                        <option>ZAR</option>\n                        <option>USD</option>\n                        <option>MXN</option>\n                        <option>ILS</option>\n                        <option>GBP</option>\n                        <option>KRW</option>\n                        <option>MYR</option>\n                    </select>\n                    <input type=\"number\" id=\"conversionvalue\" className=\"conversionvalue\" placeholder=\"Amount\"/>\n                    </body>\n\n                    <body>\n\n                    <p>Select Currency To Convert To</p>\n\n                    <select id=\"currencysoptions2\">\n                        <option>Select Currency</option>\n                        <option>EUR</option>\n                        <option>CAD</option>\n                        <option>HKD</option>\n                        <option>ISK</option>\n                        <option>PHP</option>\n                        <option>DKK</option>\n                        <option>HUF</option>\n                        <option>CZK</option>\n                        <option>AUD</option>\n                        <option>RON</option>\n                        <option>SEK</option>\n                        <option>IDR</option>\n                        <option>BRL</option>\n                        <option>RUB</option>\n                        <option>HRK</option>\n                        <option>JPY</option>\n                        <option>THB</option>\n                        <option>CHF</option>\n                        <option>SGD</option>\n                        <option>PLN</option>\n                        <option>BGN</option>\n                        <option>TRY</option>\n                        <option>CNY</option>\n                        <option>NOK</option>\n                        <option>NZD</option>\n                        <option>ZAR</option>\n                        <option>USD</option>\n                        <option>MXN</option>\n                        <option>ILS</option>\n                        <option>GBP</option>\n                        <option>KRW</option>\n                        <option>MYR</option>\n                    </select>\n                    </body>\n\n                <button className=\"fetch-button\" onClick={fetchRates}>CONVERT!</button>\n                <br />\n                </form>\n            </div>\n\n            {/* Display data from API */}\n\n            <div className=\"answerOutput\">\n\n                <h1 id=\"output\"></h1>\n\n\n            </div>\n\n        </div>\n    );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}